{"version":3,"file":"markers.js","sources":["../../src/plugins/markers/constants.js","../../src/utils/math.js","../../src/PSVError.js","../../src/utils/psv.js","../../src/plugins/markers/utils.js","../../src/plugins/markers/Marker.js","../../src/plugins/markers/MarkersButton.js","../../src/plugins/markers/MarkersListButton.js","../../src/plugins/markers/index.js"],"sourcesContent":["import icon from './pin-list.svg';\n\n/**\n * @summary Available events\n * @enum {string}\n * @memberof PSV.plugins.MarkersPlugin\n * @constant\n */\nexport const EVENTS = {\n  /**\n   * @event goto-marker-done\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when the animation to a marker is done\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   */\n  GOTO_MARKER_DONE   : 'goto-marker-done',\n  /**\n   * @event leave-marker\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when the user puts the cursor away from a marker\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   */\n  LEAVE_MARKER       : 'leave-marker',\n  /**\n   * @event over-marker\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when the user puts the cursor hover a marker\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   */\n  OVER_MARKER        : 'over-marker',\n  /**\n   * @event filter:render-markers-list\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Used to alter the list of markers displayed on the side-panel\n   * @param {PSV.plugins.MarkersPlugin.Marker[]} markers\n   * @returns {PSV.plugins.MarkersPlugin.Marker[]}\n   */\n  RENDER_MARKERS_LIST: 'render-markers-list',\n  /**\n   * @event select-marker\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when the user clicks on a marker. The marker can be retrieved from outside the event handler\n   * with {@link PSV.plugins.MarkersPlugin.getCurrentMarker}\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   * @param {PSV.plugins.MarkersPlugin.SelectMarkerData} data\n   */\n  SELECT_MARKER      : 'select-marker',\n  /**\n   * @event select-marker-list\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when a marker is selected from the side panel\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   */\n  SELECT_MARKER_LIST : 'select-marker-list',\n  /**\n   * @event unselect-marker\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when a marker was selected and the user clicks elsewhere\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   */\n  UNSELECT_MARKER    : 'unselect-marker',\n  /**\n   * @event hide-markers\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when the markers are hidden\n   */\n  HIDE_MARKERS       : 'hide-markers',\n  /**\n   * @event set-marker\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when the list of markers changes\n   * @param {PSV.plugins.MarkersPlugin.Marker[]} markers\n   */\n  SET_MARKERS        : 'set-markers',\n  /**\n   * @event show-markers\n   * @memberof PSV.plugins.MarkersPlugin\n   * @summary Triggered when the markers are shown\n   */\n  SHOW_MARKERS       : 'show-markers',\n};\n\n/**\n * @summary Namespace for SVG creation\n * @type {string}\n * @constant\n * @private\n */\nexport const SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * @summary Property name added to marker elements\n * @type {string}\n * @constant\n * @private\n */\nexport const MARKER_DATA = 'psvMarker';\n\n/**\n * @summary Panel identifier for marker content\n * @type {string}\n * @constant\n * @private\n */\nexport const ID_PANEL_MARKER = 'marker';\n\n/**\n * @summary Panel identifier for markers list\n * @type {string}\n * @constant\n * @private\n */\nexport const ID_PANEL_MARKERS_LIST = 'markersList';\n\n/**\n * @summary Markers list template\n * @param {PSV.plugins.MarkersPlugin.Marker[]} markers\n * @param {string} title\n * @param {string} dataKey\n * @returns {string}\n * @constant\n * @private\n */\nexport const MARKERS_LIST_TEMPLATE = (markers, title, dataKey) => `\n<div class=\"psv-panel-menu psv-panel-menu--stripped\">\n  <h1 class=\"psv-panel-menu-title\">${icon} ${title}</h1>\n  <ul class=\"psv-panel-menu-list\">\n    ${markers.map(marker => `\n    <li data-${dataKey}=\"${marker.config.id}\" class=\"psv-panel-menu-item\" tabindex=\"0\">\n      ${marker.type === 'image' ? `<span class=\"psv-panel-menu-item-icon\"><img src=\"${marker.config.image}\"/></span>` : ''}\n      <span class=\"psv-panel-menu-item-label\">${marker.getListContent()}</span>\n    </li>\n    `).join('')}\n  </ul>\n</div>\n`;\n","/**\n * @summary Ensures that a number is in a given interval\n * @memberOf PSV.utils\n * @param {number} x\n * @param {number} min\n * @param {number} max\n * @returns {number}\n */\nexport function bound(x, min, max) {\n  return Math.max(min, Math.min(max, x));\n}\n\n/**\n * @summary Ensure a value is within 0 and `max`\n * @param {number} value\n * @param {number} max\n * @return {number}\n */\nexport function loop(value, max) {\n  let result = value % max;\n\n  if (result < 0) {\n    result += max;\n  }\n\n  return result;\n}\n\n/**\n * @summary Checks if a value is an integer\n * @memberOf PSV.utils\n * @param {*} value\n * @returns {boolean}\n */\nexport function isInteger(value) {\n  if (Number.isInteger) {\n    return Number.isInteger(value);\n  }\n  return typeof value === 'number' && Number.isFinite(value) && Math.floor(value) === value;\n}\n\n/**\n * @summary Tests if a number is power of two\n * @memberOf PSV.utils\n * @param {number} x\n * @return {boolean}\n */\nexport function isPowerOfTwo(x) {\n  return (Math.log(x) / Math.log(2)) % 1 === 0;\n}\n\n/**\n * @summary Computes the sum of an array\n * @memberOf PSV.utils\n * @param {number[]} array\n * @returns {number}\n */\nexport function sum(array) {\n  return array.reduce((a, b) => a + b, 0);\n}\n\n/**\n * @summary Computes the distance between two points\n * @memberOf PSV.utils\n * @param {PSV.Point} p1\n * @param {PSV.Point} p2\n * @returns {number}\n */\nexport function distance(p1, p2) {\n  return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n}\n\n/**\n * @summary Compute the shortest offset between two longitudes\n * @memberOf PSV.utils\n * @param {number} from\n * @param {number} to\n * @returns {number}\n */\nexport function getShortestArc(from, to) {\n  const tCandidates = [\n    0, // direct\n    Math.PI * 2, // clock-wise cross zero\n    -Math.PI * 2, // counter-clock-wise cross zero\n  ];\n\n  return tCandidates.reduce((value, candidate) => {\n    const newCandidate = to - from + candidate;\n    return Math.abs(newCandidate) < Math.abs(value) ? newCandidate : value;\n  }, Infinity);\n}\n\n/**\n * @summary Computes the angle between the current position and a target position\n * @memberOf PSV.utils\n * @param {PSV.Position} position1\n * @param {PSV.Position} position2\n * @returns {number}\n */\nexport function getAngle(position1, position2) {\n  return Math.acos(\n    Math.cos(position1.latitude)\n    * Math.cos(position2.latitude)\n    * Math.cos(position1.longitude - position2.longitude)\n    + Math.sin(position1.latitude)\n    * Math.sin(position2.latitude)\n  );\n}\n\n/**\n * @summary Returns the distance between two points on a sphere of radius one\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n * @memberOf PSV.utils\n * @param {number[]} p1\n * @param {number[]} p2\n * @returns {number}\n */\nexport function greatArcDistance(p1, p2) {\n  const [λ1, φ1] = p1;\n  const [λ2, φ2] = p2;\n\n  const x = (λ2 - λ1) * Math.cos((φ1 + φ2) / 2);\n  const y = (φ2 - φ1);\n  return Math.sqrt(x * x + y * y);\n}\n","/**\n * @summary Custom error used in the lib\n * @param {string} message\n * @constructor\n * @memberOf PSV\n */\nfunction PSVError(message) {\n  this.message = message;\n\n  // Use V8's native method if available, otherwise fallback\n  if ('captureStackTrace' in Error) {\n    Error.captureStackTrace(this, PSVError);\n  }\n  else {\n    this.stack = (new Error()).stack;\n  }\n}\n\nPSVError.prototype = Object.create(Error.prototype);\nPSVError.prototype.name = 'PSVError';\nPSVError.prototype.constructor = PSVError;\n\nexport { PSVError };\n","import * as THREE from 'three';\nimport { PSVError } from '../PSVError';\nimport { bound, loop } from './math';\n\n/**\n * @summary Returns the plugin constructor from the imported object\n * For retrocompatibility with previous default exports\n * @memberOf PSV.utils\n * @package\n */\nexport function pluginInterop(plugin, target) {\n  if (plugin) {\n    for (const [, p] of [['_', plugin], ...Object.entries(plugin)]) {\n      if (p.prototype instanceof target) {\n        return p;\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * @summary Builds an Error with name 'AbortError'\n * @memberOf PSV.utils\n * @return {Error}\n */\nexport function getAbortError() {\n  const error = new Error('Loading was aborted.');\n  error.name = 'AbortError';\n  return error;\n}\n\n/**\n * @summary Tests if an Error has name 'AbortError'\n * @memberOf PSV.utils\n * @param {Error} err\n * @return {boolean}\n */\nexport function isAbortError(err) {\n  return err?.name === 'AbortError';\n}\n\n/**\n * @summary Displays a warning in the console\n * @memberOf PSV.utils\n * @param {string} message\n */\nexport function logWarn(message) {\n  console.warn(`PhotoSphereViewer: ${message}`);\n}\n\n/**\n * @summary Checks if an object is a {PSV.ExtendedPosition}, ie has x/y or longitude/latitude\n * @memberOf PSV.utils\n * @param {object} object\n * @returns {boolean}\n */\nexport function isExtendedPosition(object) {\n  return [['x', 'y'], ['longitude', 'latitude']].some(([key1, key2]) => {\n    return object[key1] !== undefined && object[key2] !== undefined;\n  });\n}\n\n/**\n * @summary Returns the value of a given attribute in the panorama metadata\n * @memberOf PSV.utils\n * @param {string} data\n * @param {string} attr\n * @returns (number)\n */\nexport function getXMPValue(data, attr) {\n  // XMP data are stored in children\n  let result = data.match('<GPano:' + attr + '>(.*)</GPano:' + attr + '>');\n  if (result !== null) {\n    const val = parseInt(result[1], 10);\n    return isNaN(val) ? null : val;\n  }\n\n  // XMP data are stored in attributes\n  result = data.match('GPano:' + attr + '=\"(.*?)\"');\n  if (result !== null) {\n    const val = parseInt(result[1], 10);\n    return isNaN(val) ? null : val;\n  }\n\n  return null;\n}\n\n/**\n * @readonly\n * @private\n * @type {{top: string, left: string, bottom: string, center: string, right: string}}\n */\nconst CSS_POSITIONS = {\n  top   : '0%',\n  bottom: '100%',\n  left  : '0%',\n  right : '100%',\n  center: '50%',\n};\n\n/**\n * @summary Translate CSS values like \"top center\" or \"10% 50%\" as top and left positions\n * @memberOf PSV.utils\n * @description The implementation is as close as possible to the \"background-position\" specification\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/background-position}\n * @param {string|PSV.Point} value\n * @returns {PSV.Point}\n */\nexport function parsePosition(value) {\n  if (!value) {\n    return { x: 0.5, y: 0.5 };\n  }\n\n  if (typeof value === 'object') {\n    return value;\n  }\n\n  let tokens = value.toLocaleLowerCase().split(' ').slice(0, 2);\n\n  if (tokens.length === 1) {\n    if (CSS_POSITIONS[tokens[0]] !== undefined) {\n      tokens = [tokens[0], 'center'];\n    }\n    else {\n      tokens = [tokens[0], tokens[0]];\n    }\n  }\n\n  const xFirst = tokens[1] !== 'left' && tokens[1] !== 'right' && tokens[0] !== 'top' && tokens[0] !== 'bottom';\n\n  tokens = tokens.map(token => CSS_POSITIONS[token] || token);\n\n  if (!xFirst) {\n    tokens.reverse();\n  }\n\n  const parsed = tokens.join(' ').match(/^([0-9.]+)% ([0-9.]+)%$/);\n\n  if (parsed) {\n    return {\n      x: parseFloat(parsed[1]) / 100,\n      y: parseFloat(parsed[2]) / 100,\n    };\n  }\n  else {\n    return { x: 0.5, y: 0.5 };\n  }\n}\n\n/**\n * @readonly\n * @private\n */\nconst LEFT_MAP = { 0: 'left', 0.5: 'center', 1: 'right' };\n/**\n * @readonly\n * @private\n */\nconst TOP_MAP = { 0: 'top', 0.5: 'center', 1: 'bottom' };\n\n/**\n * @summary Parse a CSS-like position into an array of position keywords among top, bottom, left, right and center\n * @memberOf PSV.utils\n * @param {string | string[]} value\n * @param {string} defaultValue\n * @param {boolean} [allowCenter=true]\n * @return {string[]}\n */\nexport function cleanPosition(value, defaultValue, allowCenter = true) {\n  if (!value) {\n    return defaultValue.split(' ');\n  }\n\n  if (typeof value === 'string') {\n    const tempPos = parsePosition(value);\n\n    if (!(tempPos.x in LEFT_MAP) || !(tempPos.y in TOP_MAP)) {\n      throw new PSVError(`Unable to parse position \"${value}\"`);\n    }\n\n    value = [TOP_MAP[tempPos.y], LEFT_MAP[tempPos.x]];\n  }\n\n  if (!allowCenter && value[0] === 'center' && value[1] === 'center') {\n    throw new PSVError('Unable to parse position \"center center\"');\n  }\n\n  return value;\n}\n\n/**\n * @summary Parses an speed\n * @memberOf PSV.utils\n * @param {string|number} speed - The speed, in radians/degrees/revolutions per second/minute\n * @returns {number} radians per second\n * @throws {PSV.PSVError} when the speed cannot be parsed\n */\nexport function parseSpeed(speed) {\n  let parsed;\n\n  if (typeof speed === 'string') {\n    const speedStr = speed.toString().trim();\n\n    // Speed extraction\n    let speedValue = parseFloat(speedStr.replace(/^(-?[0-9]+(?:\\.[0-9]*)?).*$/, '$1'));\n    const speedUnit = speedStr.replace(/^-?[0-9]+(?:\\.[0-9]*)?(.*)$/, '$1').trim();\n\n    // \"per minute\" -> \"per second\"\n    if (speedUnit.match(/(pm|per minute)$/)) {\n      speedValue /= 60;\n    }\n\n    // Which unit?\n    switch (speedUnit) {\n      // Degrees per minute / second\n      case 'dpm':\n      case 'degrees per minute':\n      case 'dps':\n      case 'degrees per second':\n        parsed = THREE.MathUtils.degToRad(speedValue);\n        break;\n\n      // Radians per minute / second\n      case 'rdpm':\n      case 'radians per minute':\n      case 'rdps':\n      case 'radians per second':\n        parsed = speedValue;\n        break;\n\n      // Revolutions per minute / second\n      case 'rpm':\n      case 'revolutions per minute':\n      case 'rps':\n      case 'revolutions per second':\n        parsed = speedValue * Math.PI * 2;\n        break;\n\n      // Unknown unit\n      default:\n        throw new PSVError('Unknown speed unit \"' + speedUnit + '\"');\n    }\n  }\n  else {\n    parsed = speed;\n  }\n\n  return parsed;\n}\n\n/**\n * @summary Parses an angle value in radians or degrees and returns a normalized value in radians\n * @memberOf PSV.utils\n * @param {string|number} angle - eg: 3.14, 3.14rad, 180deg\n * @param {boolean} [zeroCenter=false] - normalize between -Pi - Pi instead of 0 - 2*Pi\n * @param {boolean} [halfCircle=zeroCenter] - normalize between -Pi/2 - Pi/2 instead of -Pi - Pi\n * @returns {number}\n * @throws {PSV.PSVError} when the angle cannot be parsed\n */\nexport function parseAngle(angle, zeroCenter = false, halfCircle = zeroCenter) {\n  let parsed;\n\n  if (typeof angle === 'string') {\n    const match = angle.toLowerCase().trim().match(/^(-?[0-9]+(?:\\.[0-9]*)?)(.*)$/);\n\n    if (!match) {\n      throw new PSVError('Unknown angle \"' + angle + '\"');\n    }\n\n    const value = parseFloat(match[1]);\n    const unit = match[2];\n\n    if (unit) {\n      switch (unit) {\n        case 'deg':\n        case 'degs':\n          parsed = THREE.MathUtils.degToRad(value);\n          break;\n        case 'rad':\n        case 'rads':\n          parsed = value;\n          break;\n        default:\n          throw new PSVError('Unknown angle unit \"' + unit + '\"');\n      }\n    }\n    else {\n      parsed = value;\n    }\n  }\n  else if (typeof angle === 'number' && !isNaN(angle)) {\n    parsed = angle;\n  }\n  else {\n    throw new PSVError('Unknown angle \"' + angle + '\"');\n  }\n\n  parsed = loop(zeroCenter ? parsed + Math.PI : parsed, Math.PI * 2);\n\n  return zeroCenter ? bound(parsed - Math.PI, -Math.PI / (halfCircle ? 2 : 1), Math.PI / (halfCircle ? 2 : 1)) : parsed;\n}\n\n/**\n * @summary Creates a THREE texture from an image\n * @memberOf PSV.utils\n * @param {HTMLImageElement | HTMLCanvasElement} img\n * @return {external:THREE.Texture}\n */\nexport function createTexture(img) {\n  const texture = new THREE.Texture(img);\n  texture.needsUpdate = true;\n  texture.minFilter = THREE.LinearFilter;\n  texture.generateMipmaps = false;\n  return texture;\n}\n\nconst quaternion = new THREE.Quaternion();\n\n/**\n * @summary Applies the inverse of Euler angles to a vector\n * @memberOf PSV.utils\n * @param {external:THREE.Vector3} vector\n * @param {external:THREE.Euler} euler\n */\nexport function applyEulerInverse(vector, euler) {\n  quaternion.setFromEuler(euler).invert();\n  vector.applyQuaternion(quaternion);\n}\n","import { CONSTANTS, utils } from '../..';\n\n/**\n * Returns intermediary point between two points on the sphere\n * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n * @param {number[]} p1\n * @param {number[]} p2\n * @param {number} f\n * @returns {number[]}\n * @private\n */\nexport function greatArcIntermediaryPoint(p1, p2, f) {\n  const [λ1, φ1] = p1;\n  const [λ2, φ2] = p2;\n\n  const r = utils.greatArcDistance(p1, p2);\n  const a = Math.sin((1 - f) * r) / Math.sin(r);\n  const b = Math.sin(f * r) / Math.sin(r);\n  const x = a * Math.cos(φ1) * Math.cos(λ1) + b * Math.cos(φ2) * Math.cos(λ2);\n  const y = a * Math.cos(φ1) * Math.sin(λ1) + b * Math.cos(φ2) * Math.sin(λ2);\n  const z = a * Math.sin(φ1) + b * Math.sin(φ2);\n\n  return [\n    Math.atan2(y, x),\n    Math.atan2(z, Math.sqrt(x * x + y * y)),\n  ];\n}\n\n/**\n * @summary Computes the center point of a polygon\n * @todo Get \"visual center\" (https://blog.mapbox.com/a-new-algorithm-for-finding-a-visual-center-of-a-polygon-7c77e6492fbc)\n * @param {number[][]} polygon\n * @returns {number[]}\n * @private\n */\nexport function getPolygonCenter(polygon) {\n  // apply offsets to avoid crossing the origin\n  const workPoints = [polygon[0]];\n\n  let k = 0;\n  for (let i = 1; i < polygon.length; i++) {\n    const d = polygon[i - 1][0] - polygon[i][0];\n    if (d > Math.PI) { // crossed the origin left to right\n      k += 1;\n    }\n    else if (d < -Math.PI) { // crossed the origin right to left\n      k -= 1;\n    }\n    workPoints.push([polygon[i][0] + k * 2 * Math.PI, polygon[i][1]]);\n  }\n\n  const sum = workPoints.reduce((intermediary, point) => [intermediary[0] + point[0], intermediary[1] + point[1]]);\n  return [utils.parseAngle(sum[0] / polygon.length), sum[1] / polygon.length];\n}\n\n/**\n * @summary Computes the middle point of a polyline\n * @param {number[][]} polyline\n * @returns {number[]}\n * @private\n */\nexport function getPolylineCenter(polyline) {\n  // compute each segment length + total length\n  let length = 0;\n  const lengths = [];\n\n  for (let i = 0; i < polyline.length - 1; i++) {\n    const l = utils.greatArcDistance(polyline[i], polyline[i + 1]) * CONSTANTS.SPHERE_RADIUS;\n\n    lengths.push(l);\n    length += l;\n  }\n\n  // iterate until length / 2\n  let consumed = 0;\n\n  for (let j = 0; j < polyline.length - 1; j++) {\n    // once the segment containing the middle point is found, computes the intermediary point\n    if (consumed + lengths[j] > length / 2) {\n      const r = (length / 2 - consumed) / lengths[j];\n      return greatArcIntermediaryPoint(polyline[j], polyline[j + 1], r);\n    }\n\n    consumed += lengths[j];\n  }\n\n  // this never happens\n  return polyline[Math.round(polyline.length / 2)];\n}\n","import * as THREE from 'three';\nimport { CONSTANTS, PSVError, utils } from '../..';\nimport { getShortestArc, logWarn } from '../../utils';\nimport { MARKER_DATA, SVG_NS } from './constants';\nimport { getPolygonCenter, getPolylineCenter } from './utils';\n\n/**\n * @summary Types of marker\n * @memberOf PSV.plugins.MarkersPlugin\n * @enum {string}\n * @constant\n * @private\n */\nconst MARKER_TYPES = {\n  image      : 'image',\n  imageLayer : 'imageLayer',\n  html       : 'html',\n  polygonPx  : 'polygonPx',\n  polygonRad : 'polygonRad',\n  polylinePx : 'polylinePx',\n  polylineRad: 'polylineRad',\n  square     : 'square',\n  rect       : 'rect',\n  circle     : 'circle',\n  ellipse    : 'ellipse',\n  path       : 'path',\n};\n\n/**\n * @typedef {Object} PSV.plugins.MarkersPlugin.Properties\n * @summary Marker properties, see {@link https://photo-sphere-viewer.js.org/plugins/plugin-markers.html#markers-options}\n */\n\n/**\n * @summary Object representing a marker\n * @memberOf PSV.plugins.MarkersPlugin\n */\nexport class Marker {\n\n  /**\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\n   * @param {PSV.Viewer} psv\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  constructor(properties, psv) {\n    if (!properties.id) {\n      throw new PSVError('missing marker id');\n    }\n\n    /**\n     * @member {PSV.Viewer}\n     * @readonly\n     * @protected\n     */\n    this.psv = psv;\n\n    /**\n     * @member {string}\n     * @readonly\n     */\n    this.id = properties.id;\n\n    /**\n     * @member {string}\n     * @readonly\n     */\n    this.type = Marker.getType(properties, false);\n\n    /**\n     * @member {boolean}\n     * @protected\n     */\n    this.visible = true;\n\n    /**\n     * @member {HTMLElement|SVGElement|THREE.Object3D}\n     * @readonly\n     */\n    this.$el = null;\n\n    /**\n     * @summary Original configuration of the marker\n     * @member {PSV.plugins.MarkersPlugin.Properties}\n     * @readonly\n     */\n    this.config = {};\n\n    /**\n     * @summary User data associated to the marker\n     * @member {any}\n     */\n    this.data = undefined;\n\n    /**\n     * @summary Tooltip instance for this marker\n     * @member {PSV.components.Tooltip}\n     */\n    this.tooltip = null;\n\n    /**\n     * @summary Computed properties\n     * @member {Object}\n     * @protected\n     * @property {boolean} dynamicSize\n     * @property {PSV.Point} anchor\n     * @property {PSV.Position} position - position in spherical coordinates\n     * @property {PSV.Point} position2D - position in viewer coordinates\n     * @property {external:THREE.Vector3[]} positions3D - positions in 3D space\n     * @property {number} width\n     * @property {number} height\n     * @property {*} def\n     */\n    this.props = {\n      dynamicSize: false,\n      anchor     : null,\n      position   : null,\n      position2D : null,\n      positions3D: null,\n      width      : null,\n      height     : null,\n      def        : null,\n    };\n\n    /**\n     * @summary THREE file loader\n     * @type {THREE:TextureLoader}\n     * @private\n     */\n    this.loader = null;\n\n    if (this.is3d()) {\n      this.loader = new THREE.TextureLoader();\n      if (this.psv.config.withCredentials) {\n        this.loader.setWithCredentials(true);\n      }\n      if (this.psv.config.requestHeaders && typeof this.psv.config.requestHeaders === 'object') {\n        this.loader.setRequestHeader(this.psv.config.requestHeaders);\n      }\n    }\n\n    // create element\n    if (this.isNormal()) {\n      this.$el = document.createElement('div');\n    }\n    else if (this.isPolygon()) {\n      this.$el = document.createElementNS(SVG_NS, 'polygon');\n    }\n    else if (this.isPolyline()) {\n      this.$el = document.createElementNS(SVG_NS, 'polyline');\n    }\n    else if (this.isSvg()) {\n      this.$el = document.createElementNS(SVG_NS, this.type);\n    }\n\n    if (!this.is3d()) {\n      this.$el.id = `psv-marker-${this.id}`;\n      this.$el[MARKER_DATA] = this;\n    }\n\n    this.update(properties);\n  }\n\n  /**\n   * @summary Destroys the marker\n   */\n  destroy() {\n    delete this.$el[MARKER_DATA];\n    delete this.$el;\n    delete this.config;\n    delete this.props;\n    delete this.psv;\n  }\n\n  /**\n   * @summary Checks if it is a 3D marker (imageLayer)\n   * @returns {boolean}\n   */\n  is3d() {\n    return this.type === MARKER_TYPES.imageLayer;\n  }\n\n  /**\n   * @summary Checks if it is a normal marker (image or html)\n   * @returns {boolean}\n   */\n  isNormal() {\n    return this.type === MARKER_TYPES.image\n      || this.type === MARKER_TYPES.html;\n  }\n\n  /**\n   * @summary Checks if it is a polygon/polyline marker\n   * @returns {boolean}\n   */\n  isPoly() {\n    return this.isPolygon()\n      || this.isPolyline();\n  }\n\n  /**\n   * @summary Checks if it is a polygon/polyline using pixel coordinates\n   * @returns {boolean}\n   */\n  isPolyPx() {\n    return this.type === MARKER_TYPES.polygonPx\n      || this.type === MARKER_TYPES.polylinePx;\n  }\n\n  /**\n   * @summary Checks if it is a polygon/polyline using radian coordinates\n   * @returns {boolean}\n   */\n  isPolyRad() {\n    return this.type === MARKER_TYPES.polygonRad\n      || this.type === MARKER_TYPES.polylineRad;\n  }\n\n  /**\n   * @summary Checks if it is a polygon marker\n   * @returns {boolean}\n   */\n  isPolygon() {\n    return this.type === MARKER_TYPES.polygonPx\n      || this.type === MARKER_TYPES.polygonRad;\n  }\n\n  /**\n   * @summary Checks if it is a polyline marker\n   * @returns {boolean}\n   */\n  isPolyline() {\n    return this.type === MARKER_TYPES.polylinePx\n      || this.type === MARKER_TYPES.polylineRad;\n  }\n\n  /**\n   * @summary Checks if it is an SVG marker\n   * @returns {boolean}\n   */\n  isSvg() {\n    return this.type === MARKER_TYPES.square\n      || this.type === MARKER_TYPES.rect\n      || this.type === MARKER_TYPES.circle\n      || this.type === MARKER_TYPES.ellipse\n      || this.type === MARKER_TYPES.path;\n  }\n\n  /**\n   * @summary Computes marker scale from zoom level\n   * @param {number} zoomLevel\n   * @param {PSV.Position} position\n   * @returns {number}\n   */\n  getScale(zoomLevel, position) {\n    if (!this.config.scale) {\n      return 1;\n    }\n    if (typeof this.config.scale === 'function') {\n      return this.config.scale(zoomLevel, position);\n    }\n\n    let scale = 1;\n    if (Array.isArray(this.config.scale.zoom)) {\n      const bounds = this.config.scale.zoom;\n      scale *= bounds[0] + (bounds[1] - bounds[0]) * CONSTANTS.EASINGS.inQuad(zoomLevel / 100);\n    }\n    if (Array.isArray(this.config.scale.longitude)) {\n      const bounds = this.config.scale.longitude;\n      const halfFov = THREE.MathUtils.degToRad(this.psv.prop.hFov) / 2;\n      const arc = Math.abs(getShortestArc(this.props.position.longitude, position.longitude));\n      scale *= bounds[1] + (bounds[0] - bounds[1]) * CONSTANTS.EASINGS.outQuad(Math.max(0, (halfFov - arc) / halfFov));\n    }\n    return scale;\n  }\n\n  /**\n   * @summary Returns the markers list content for the marker, it can be either :\n   * - the `listContent`\n   * - the `tooltip.content`\n   * - the `html`\n   * - the `id`\n   * @returns {*}\n   */\n  getListContent() {\n    if (this.config.listContent) {\n      return this.config.listContent;\n    }\n    else if (this.config.tooltip?.content) {\n      return this.config.tooltip.content;\n    }\n    else if (this.config.html) {\n      return this.config.html;\n    }\n    else {\n      return this.id;\n    }\n  }\n\n  /**\n   * @summary Display the tooltip of this marker\n   * @param {{clientX: number, clientY: number}} [mousePosition]\n   */\n  showTooltip(mousePosition) {\n    if (this.visible && this.config.tooltip?.content && this.props.position2D) {\n      const config = {\n        content : this.config.tooltip.content,\n        position: this.config.tooltip.position,\n        data    : this,\n      };\n\n      if (this.isPoly()) {\n        const viewerPos = utils.getPosition(this.psv.container);\n\n        config.box = { // separate the tooltip from the cursor\n          width : this.psv.tooltip.size.arrow * 2,\n          height: this.psv.tooltip.size.arrow * 2,\n        };\n\n        if (mousePosition) {\n          config.top = mousePosition.clientY - viewerPos.top - this.psv.tooltip.size.arrow / 2;\n          config.left = mousePosition.clientX - viewerPos.left - this.psv.tooltip.size.arrow;\n        }\n        else {\n          config.top = this.props.position2D.y;\n          config.left = this.props.position2D.x;\n        }\n      }\n      else {\n        config.top = this.props.position2D.y;\n        config.left = this.props.position2D.x;\n        config.box = {\n          width : this.props.width,\n          height: this.props.height,\n        };\n      }\n\n      if (this.tooltip) {\n        this.tooltip.move(config);\n      }\n      else {\n        this.tooltip = this.psv.tooltip.create(config);\n      }\n    }\n  }\n\n  /**\n   * @summary Hides the tooltip of this marker\n   */\n  hideTooltip() {\n    if (this.tooltip) {\n      this.tooltip.hide();\n      this.tooltip = null;\n    }\n  }\n\n  /**\n   * @summary Updates the marker with new properties\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\n   * @throws {PSV.PSVError} when the configuration is incorrect\n   */\n  update(properties) {\n    const newType = Marker.getType(properties, true);\n\n    if (newType !== undefined && newType !== this.type) {\n      throw new PSVError('cannot change marker type');\n    }\n\n    utils.deepmerge(this.config, properties);\n    if (typeof this.config.tooltip === 'string') {\n      this.config.tooltip = { content: this.config.tooltip };\n    }\n\n    this.data = this.config.data;\n    this.visible = this.config.visible !== false;\n\n    if (!this.is3d()) {\n      // reset CSS class\n      if (this.isNormal()) {\n        this.$el.setAttribute('class', 'psv-marker psv-marker--normal');\n      }\n      else {\n        this.$el.setAttribute('class', 'psv-marker psv-marker--svg');\n      }\n\n      // add CSS classes\n      if (this.config.className) {\n        utils.addClasses(this.$el, this.config.className);\n      }\n\n      if (this.config.tooltip) {\n        utils.addClasses(this.$el, 'psv-marker--has-tooltip');\n      }\n      if (this.config.content) {\n        utils.addClasses(this.$el, 'psv-marler--has-content');\n      }\n\n      // apply style\n      this.$el.style.opacity = this.config.opacity ?? 1;\n      if (this.config.style) {\n        utils.deepmerge(this.$el.style, this.config.style);\n      }\n    }\n\n    // parse anchor\n    this.props.anchor = utils.parsePosition(this.config.anchor);\n\n    // clean scale\n    if (this.config.scale) {\n      if (typeof this.config.scale === 'number') {\n        logWarn('Single value marker scale is deprecated, please use an array of two values.');\n        this.config.scale = { zoom: [0, this.config.scale] };\n      }\n      if (Array.isArray(this.config.scale)) {\n        this.config.scale = { zoom: this.config.scale };\n      }\n    }\n\n    if (this.isNormal()) {\n      this.__updateNormal();\n    }\n    else if (this.isPoly()) {\n      this.__updatePoly();\n    }\n    else if (this.isSvg()) {\n      this.__updateSvg();\n    }\n    else if (this.is3d()) {\n      this.__update3d();\n    }\n  }\n\n  /**\n   * @summary Updates a normal marker\n   * @private\n   */\n  __updateNormal() {\n    if (!utils.isExtendedPosition(this.config)) {\n      throw new PSVError('missing marker position, latitude/longitude or x/y');\n    }\n\n    if (this.config.image && (!this.config.width || !this.config.height)) {\n      throw new PSVError('missing marker width/height');\n    }\n\n    if (this.config.width && this.config.height) {\n      this.props.dynamicSize = false;\n      this.props.width = this.config.width;\n      this.props.height = this.config.height;\n      this.$el.style.width = this.config.width + 'px';\n      this.$el.style.height = this.config.height + 'px';\n    }\n    else {\n      this.props.dynamicSize = true;\n    }\n\n    if (this.config.image) {\n      this.props.def = this.config.image;\n      this.$el.style.backgroundImage = `url(${this.config.image})`;\n    }\n    else if (this.config.html) {\n      this.props.def = this.config.html;\n      this.$el.innerHTML = this.config.html;\n    }\n\n    // set anchor\n    this.$el.style.transformOrigin = `${this.props.anchor.x * 100}% ${this.props.anchor.y * 100}%`;\n\n    // convert texture coordinates to spherical coordinates\n    this.props.position = this.psv.dataHelper.cleanPosition(this.config);\n\n    // compute x/y/z position\n    this.props.positions3D = [this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)];\n  }\n\n  /**\n   * @summary Updates an SVG marker\n   * @private\n   */\n  __updateSvg() {\n    if (!utils.isExtendedPosition(this.config)) {\n      throw new PSVError('missing marker position, latitude/longitude or x/y');\n    }\n\n    this.props.dynamicSize = true;\n\n    // set content\n    switch (this.type) {\n      case MARKER_TYPES.square:\n        this.props.def = {\n          x     : 0,\n          y     : 0,\n          width : this.config.square,\n          height: this.config.square,\n        };\n        break;\n\n      case MARKER_TYPES.rect:\n        if (Array.isArray(this.config.rect)) {\n          this.props.def = {\n            x     : 0,\n            y     : 0,\n            width : this.config.rect[0],\n            height: this.config.rect[1],\n          };\n        }\n        else {\n          this.props.def = {\n            x     : 0,\n            y     : 0,\n            width : this.config.rect.width,\n            height: this.config.rect.height,\n          };\n        }\n        break;\n\n      case MARKER_TYPES.circle:\n        this.props.def = {\n          cx: this.config.circle,\n          cy: this.config.circle,\n          r : this.config.circle,\n        };\n        break;\n\n      case MARKER_TYPES.ellipse:\n        if (Array.isArray(this.config.ellipse)) {\n          this.props.def = {\n            cx: this.config.ellipse[0],\n            cy: this.config.ellipse[1],\n            rx: this.config.ellipse[0],\n            ry: this.config.ellipse[1],\n          };\n        }\n        else {\n          this.props.def = {\n            cx: this.config.ellipse.rx,\n            cy: this.config.ellipse.ry,\n            rx: this.config.ellipse.rx,\n            ry: this.config.ellipse.ry,\n          };\n        }\n        break;\n\n      case MARKER_TYPES.path:\n        this.props.def = {\n          d: this.config.path,\n        };\n        break;\n\n      // no default\n    }\n\n    utils.each(this.props.def, (value, prop) => {\n      this.$el.setAttributeNS(null, prop, value);\n    });\n\n    // set style\n    if (this.config.svgStyle) {\n      utils.each(this.config.svgStyle, (value, prop) => {\n        this.$el.setAttributeNS(null, utils.dasherize(prop), value);\n      });\n    }\n    else {\n      this.$el.setAttributeNS(null, 'fill', 'rgba(0,0,0,0.5)');\n    }\n\n    // convert texture coordinates to spherical coordinates\n    this.props.position = this.psv.dataHelper.cleanPosition(this.config);\n\n    // compute x/y/z position\n    this.props.positions3D = [this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)];\n  }\n\n  /**\n   * @summary Updates a polygon marker\n   * @private\n   */\n  __updatePoly() {\n    this.props.dynamicSize = true;\n\n    // set style\n    if (this.config.svgStyle) {\n      utils.each(this.config.svgStyle, (value, prop) => {\n        this.$el.setAttributeNS(null, utils.dasherize(prop), value);\n      });\n\n      if (this.isPolyline() && !this.config.svgStyle.fill) {\n        this.$el.setAttributeNS(null, 'fill', 'none');\n      }\n    }\n    else if (this.isPolygon()) {\n      this.$el.setAttributeNS(null, 'fill', 'rgba(0,0,0,0.5)');\n    }\n    else if (this.isPolyline()) {\n      this.$el.setAttributeNS(null, 'fill', 'none');\n      this.$el.setAttributeNS(null, 'stroke', 'rgb(0,0,0)');\n    }\n\n    // fold arrays: [1,2,3,4] => [[1,2],[3,4]]\n    const actualPoly = this.config.polygonPx || this.config.polygonRad || this.config.polylinePx || this.config.polylineRad;\n    if (!Array.isArray(actualPoly[0])) {\n      for (let i = 0; i < actualPoly.length; i++) {\n        actualPoly.splice(i, 2, [actualPoly[i], actualPoly[i + 1]]);\n      }\n    }\n\n    // convert texture coordinates to spherical coordinates\n    if (this.isPolyPx()) {\n      this.props.def = actualPoly.map((coord) => {\n        const sphericalCoords = this.psv.dataHelper.textureCoordsToSphericalCoords({ x: coord[0], y: coord[1] });\n        return [sphericalCoords.longitude, sphericalCoords.latitude];\n      });\n    }\n    // clean angles\n    else {\n      this.props.def = actualPoly.map((coord) => {\n        return [utils.parseAngle(coord[0]), utils.parseAngle(coord[1], true)];\n      });\n    }\n\n    const centroid = this.isPolygon()\n      ? getPolygonCenter(this.props.def)\n      : getPolylineCenter(this.props.def);\n\n    this.props.position = {\n      longitude: centroid[0],\n      latitude : centroid[1],\n    };\n\n    // compute x/y/z positions\n    this.props.positions3D = this.props.def.map((coord) => {\n      return this.psv.dataHelper.sphericalCoordsToVector3({ longitude: coord[0], latitude : coord[1] });\n    });\n  }\n\n  /**\n   * @summary Updates a 3D marker\n   * @private\n   */\n  __update3d() {\n    if (!this.config.width || !this.config.height) {\n      throw new PSVError('missing marker width/height');\n    }\n\n    this.props.dynamicSize = false;\n    this.props.width = this.config.width;\n    this.props.height = this.config.height;\n\n    // convert texture coordinates to spherical coordinates\n    this.props.position = this.psv.dataHelper.cleanPosition(this.config);\n\n    // compute x/y/z position\n    this.props.positions3D = [this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)];\n\n    switch (this.type) {\n      case MARKER_TYPES.imageLayer:\n        if (!this.$el) {\n          const material = new THREE.MeshBasicMaterial({\n            transparent: true,\n            opacity    : this.config.opacity ?? 1,\n            depthTest  : false,\n          });\n          const geometry = new THREE.PlaneGeometry(1, 1);\n          const mesh = new THREE.Mesh(geometry, material);\n          mesh.userData = { [MARKER_DATA]: this };\n          this.$el = new THREE.Group().add(mesh);\n\n          // overwrite the visible property to be tied to the Marker instance\n          // and do it without context bleed\n          Object.defineProperty(this.$el, 'visible', {\n            enumerable: true,\n            get       : function () {\n              return this.children[0].userData[MARKER_DATA].visible;\n            },\n            set       : function (visible) {\n              this.children[0].userData[MARKER_DATA].visible = visible;\n            },\n          });\n        }\n\n        if (this.props.def !== this.config.imageLayer) {\n          if (this.psv.config.requestHeaders && typeof this.psv.config.requestHeaders === 'function') {\n            this.loader.setRequestHeader(this.psv.config.requestHeaders(this.config.imageLayer));\n          }\n          this.$el.children[0].material.map = this.loader.load(this.config.imageLayer, (texture) => {\n            texture.anisotropy = 4;\n            this.psv.needsUpdate();\n          });\n          this.props.def = this.config.imageLayer;\n        }\n\n        this.$el.children[0].position.set(\n          this.props.anchor.x - 0.5,\n          this.props.anchor.y - 0.5,\n          0\n        );\n\n        this.$el.position.copy(this.props.positions3D[0]);\n\n        switch (this.config.orientation) {\n          case 'horizontal':\n            this.$el.lookAt(0, this.$el.position.y, 0);\n            this.$el.rotateX(this.props.position.latitude < 0 ? -Math.PI / 2 : Math.PI / 2);\n            break;\n          case 'vertical-left':\n            this.$el.lookAt(0, 0, 0);\n            this.$el.rotateY(-Math.PI * 0.4);\n            break;\n          case 'vertical-right':\n            this.$el.lookAt(0, 0, 0);\n            this.$el.rotateY(Math.PI * 0.4);\n            break;\n          default:\n            this.$el.lookAt(0, 0, 0);\n            break;\n        }\n\n        // 100 is magic number that gives a coherent size at default zoom level\n        this.$el.scale.set(this.config.width / 100, this.config.height / 100, 1);\n        break;\n\n      // no default\n    }\n  }\n\n  /**\n   * @summary Determines the type of a marker by the available properties\n   * @param {Marker.Properties} properties\n   * @param {boolean} [allowNone=false]\n   * @returns {string}\n   * @throws {PSV.PSVError} when the marker's type cannot be found\n   */\n  static getType(properties, allowNone = false) {\n    const found = [];\n\n    utils.each(MARKER_TYPES, (type) => {\n      if (properties[type]) {\n        found.push(type);\n      }\n    });\n\n    if (found.length === 0 && !allowNone) {\n      throw new PSVError(`missing marker content, either ${Object.keys(MARKER_TYPES).join(', ')}`);\n    }\n    else if (found.length > 1) {\n      throw new PSVError(`multiple marker content, either ${Object.keys(MARKER_TYPES).join(', ')}`);\n    }\n\n    return found[0];\n  }\n\n}\n","import { AbstractButton } from '../..';\nimport { EVENTS } from './constants';\nimport pin from './pin.svg';\n\n/**\n * @summary Navigation bar markers button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class MarkersButton extends AbstractButton {\n\n  static id = 'markers';\n  static icon = pin;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-markers-button', true);\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     */\n    this.plugin = this.psv.getPlugin('markers');\n\n    if (this.plugin) {\n      this.plugin.on(EVENTS.SHOW_MARKERS, this);\n      this.plugin.on(EVENTS.HIDE_MARKERS, this);\n\n      this.toggleActive(true);\n    }\n\n    this.hide();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    if (this.plugin) {\n      this.plugin.off(EVENTS.SHOW_MARKERS, this);\n      this.plugin.off(EVENTS.HIDE_MARKERS, this);\n    }\n\n    super.destroy();\n  }\n\n  /**\n   * @override\n   */\n  isSupported() {\n    return !!this.plugin;\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case EVENTS.SHOW_MARKERS: this.toggleActive(true); break;\n      case EVENTS.HIDE_MARKERS: this.toggleActive(false); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @description Toggles markers\n   */\n  onClick() {\n    if (this.plugin.prop.visible) {\n      this.plugin.hide();\n    }\n    else {\n      this.plugin.show();\n    }\n  }\n\n}\n","import { AbstractButton, CONSTANTS } from '../..';\nimport { ID_PANEL_MARKERS_LIST } from './constants';\nimport pinList from './pin-list.svg';\n\n/**\n * @summary Navigation bar markers list button class\n * @extends PSV.buttons.AbstractButton\n * @memberof PSV.buttons\n */\nexport class MarkersListButton extends AbstractButton {\n\n  static id = 'markersList';\n  static icon = pinList;\n\n  /**\n   * @param {PSV.components.Navbar} navbar\n   */\n  constructor(navbar) {\n    super(navbar, 'psv-button--hover-scale psv-markers-list-button', true);\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin}\n     */\n    this.plugin = this.psv.getPlugin('markers');\n\n    if (this.plugin) {\n      this.psv.on(CONSTANTS.EVENTS.OPEN_PANEL, this);\n      this.psv.on(CONSTANTS.EVENTS.CLOSE_PANEL, this);\n    }\n\n    this.hide();\n  }\n\n  /**\n   * @override\n   */\n  destroy() {\n    this.psv.off(CONSTANTS.EVENTS.OPEN_PANEL, this);\n    this.psv.off(CONSTANTS.EVENTS.CLOSE_PANEL, this);\n\n    super.destroy();\n  }\n\n  /**\n   * @override\n   */\n  isSupported() {\n    return !!this.plugin;\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case CONSTANTS.EVENTS.OPEN_PANEL:  this.toggleActive(e.args[0] === ID_PANEL_MARKERS_LIST); break;\n      case CONSTANTS.EVENTS.CLOSE_PANEL: this.toggleActive(false); break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @override\n   * @description Toggles markers list\n   */\n  onClick() {\n    this.plugin.toggleMarkersList();\n  }\n\n}\n","import * as THREE from 'three';\nimport { AbstractPlugin, CONSTANTS, DEFAULTS, PSVError, registerButton, utils } from '../..';\nimport {\n  EVENTS,\n  ID_PANEL_MARKER,\n  ID_PANEL_MARKERS_LIST,\n  MARKER_DATA,\n  MARKERS_LIST_TEMPLATE,\n  SVG_NS\n} from './constants';\nimport { Marker } from './Marker';\nimport { MarkersButton } from './MarkersButton';\nimport { MarkersListButton } from './MarkersListButton';\nimport './style.scss';\n\n\n/**\n * @typedef {Object} PSV.plugins.MarkersPlugin.Options\n * @property {boolean} [clickEventOnMarker=false] If a `click` event is triggered on the viewer additionally to the `select-marker` event.\n * @property {PSV.plugins.MarkersPlugin.Properties[]} [markers]\n */\n\n/**\n * @typedef {Object} PSV.plugins.MarkersPlugin.SelectMarkerData\n * @summary Data of the `select-marker` event\n * @property {boolean} dblclick - if the selection originated from a double click, the simple click is always fired before the double click\n * @property {boolean} rightclick - if the selection originated from a right click\n */\n\n\n// add markers buttons\nDEFAULTS.lang[MarkersButton.id] = 'Markers';\nDEFAULTS.lang[MarkersListButton.id] = 'Markers list';\nregisterButton(MarkersButton, 'caption:left');\nregisterButton(MarkersListButton, 'caption:left');\n\n\nexport { EVENTS } from './constants';\n\n\n/**\n * @summary Displays various markers on the viewer\n * @extends PSV.plugins.AbstractPlugin\n * @memberof PSV.plugins\n */\nexport class MarkersPlugin extends AbstractPlugin {\n\n  static id = 'markers';\n\n  static EVENTS = EVENTS;\n\n  /**\n   * @param {PSV.Viewer} psv\n   * @param {PSV.plugins.MarkersPlugin.Options} [options]\n   */\n  constructor(psv, options) {\n    super(psv);\n\n    /**\n     * @summary All registered markers\n     * @member {Object<string, PSV.plugins.MarkersPlugin.Marker>}\n     */\n    this.markers = {};\n\n    /**\n     * @type {Object}\n     * @property {boolean} visible - Visibility of the component\n     * @property {PSV.plugins.MarkersPlugin.Marker} currentMarker - Last selected marker\n     * @property {PSV.plugins.MarkersPlugin.Marker} hoveringMarker - Marker under the cursor\n     * @private\n     */\n    this.prop = {\n      visible       : true,\n      currentMarker : null,\n      hoveringMarker: null,\n      stopObserver  : null,\n    };\n\n    /**\n     * @type {PSV.plugins.MarkersPlugin.Options}\n     */\n    this.config = {\n      clickEventOnMarker: false,\n      ...options,\n    };\n\n    if (options?.listButton === false || options?.hideButton === false) {\n      utils.logWarn('MarkersPlugin: listButton and hideButton options are deprecated. '\n        + 'Please define the global navbar options according to your needs.');\n    }\n\n    /**\n     * @member {HTMLElement}\n     * @readonly\n     */\n    this.container = document.createElement('div');\n    this.container.className = 'psv-markers';\n    this.container.style.cursor = this.psv.config.mousemove ? 'move' : 'default';\n\n    /**\n     * @member {SVGElement}\n     * @readonly\n     */\n    this.svgContainer = document.createElementNS(SVG_NS, 'svg');\n    this.svgContainer.setAttribute('class', 'psv-markers-svg-container');\n    this.container.appendChild(this.svgContainer);\n\n    // Markers events via delegation\n    this.container.addEventListener('mouseenter', this, true);\n    this.container.addEventListener('mouseleave', this, true);\n    this.container.addEventListener('mousemove', this, true);\n    this.container.addEventListener('contextmenu', this);\n  }\n\n  /**\n   * @package\n   */\n  init() {\n    super.init();\n\n    this.psv.container.appendChild(this.container);\n\n    // Viewer events\n    this.psv.on(CONSTANTS.EVENTS.CLICK, this);\n    this.psv.on(CONSTANTS.EVENTS.DOUBLE_CLICK, this);\n    this.psv.on(CONSTANTS.EVENTS.RENDER, this);\n    this.psv.on(CONSTANTS.EVENTS.CONFIG_CHANGED, this);\n\n    if (this.config.markers) {\n      this.psv.once(CONSTANTS.EVENTS.READY, () => {\n        this.setMarkers(this.config.markers);\n        delete this.config.markers;\n      });\n    }\n  }\n\n  /**\n   * @package\n   */\n  destroy() {\n    this.clearMarkers(false);\n\n    this.prop.stopObserver?.();\n\n    this.psv.off(CONSTANTS.EVENTS.CLICK, this);\n    this.psv.off(CONSTANTS.EVENTS.DOUBLE_CLICK, this);\n    this.psv.off(CONSTANTS.EVENTS.RENDER, this);\n    this.psv.off(CONSTANTS.EVENTS.CONFIG_CHANGED, this);\n\n    this.psv.container.removeChild(this.container);\n\n    delete this.svgContainer;\n    delete this.markers;\n    delete this.container;\n\n    super.destroy();\n  }\n\n  /**\n   * @summary Handles events\n   * @param {Event} e\n   * @private\n   */\n  handleEvent(e) {\n    /* eslint-disable */\n    switch (e.type) {\n      // @formatter:off\n      case 'mouseenter':  this.__onMouseEnter(e, this.__getTargetMarker(e.target)); break;\n      case 'mouseleave':  this.__onMouseLeave(e, this.__getTargetMarker(e.target)); break;\n      case 'mousemove':   this.__onMouseMove(e, this.__getTargetMarker(e.target));  break;\n      case 'contextmenu': e.preventDefault(); break;\n      case CONSTANTS.EVENTS.CLICK:        this.__onClick(e, e.args[0], false); break;\n      case CONSTANTS.EVENTS.DOUBLE_CLICK: this.__onClick(e, e.args[0], true);  break;\n      case CONSTANTS.EVENTS.RENDER:       this.renderMarkers();                        break;\n      case CONSTANTS.OBJECT_EVENTS.ENTER_OBJECT: this.__onMouseEnter(e.detail.originalEvent, e.detail.data); break;\n      case CONSTANTS.OBJECT_EVENTS.LEAVE_OBJECT: this.__onMouseLeave(e.detail.originalEvent, e.detail.data); break;\n      case CONSTANTS.OBJECT_EVENTS.HOVER_OBJECT: this.__onMouseMove(e.detail.originalEvent, e.detail.data);  break;\n      case CONSTANTS.EVENTS.CONFIG_CHANGED:\n        this.container.style.cursor = this.psv.config.mousemove ? 'move' : 'default';\n        break;\n      // @formatter:on\n    }\n    /* eslint-enable */\n  }\n\n  /**\n   * @summary Shows all markers\n   * @fires PSV.plugins.MarkersPlugin.show-markers\n   */\n  show() {\n    this.prop.visible = true;\n\n    this.renderMarkers();\n\n    this.trigger(EVENTS.SHOW_MARKERS);\n  }\n\n  /**\n   * @summary Hides all markers\n   * @fires PSV.plugins.MarkersPlugin.hide-markers\n   */\n  hide() {\n    this.prop.visible = false;\n\n    this.renderMarkers();\n\n    this.trigger(EVENTS.HIDE_MARKERS);\n  }\n\n  /**\n   * @summary Toggles the visibility of all tooltips\n   */\n  toggleAllTooltips() {\n    this.prop.showAllTooltips = !this.prop.showAllTooltips;\n    this.renderMarkers();\n  }\n\n  /**\n   * @summary Displays all tooltips\n   */\n  showAllTooltips() {\n    this.prop.showAllTooltips = true;\n    this.renderMarkers();\n  }\n\n  /**\n   * @summary Hides all tooltips\n   */\n  hideAllTooltips() {\n    this.prop.showAllTooltips = false;\n    this.renderMarkers();\n  }\n\n  /**\n   * @summary Returns the total number of markers\n   * @returns {number}\n   */\n  getNbMarkers() {\n    return Object.keys(this.markers).length;\n  }\n\n  /**\n   * @summary Returns all the markers\n   * @return {PSV.plugins.MarkersPlugin.Marker[]}\n   */\n  getMarkers() {\n    return Object.values(this.markers);\n  }\n\n  /**\n   * @summary Adds a new marker to viewer\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\n   * @param {boolean} [render=true] - renders the marker immediately\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\n   * @throws {PSV.PSVError} when the marker's id is missing or already exists\n   */\n  addMarker(properties, render = true) {\n    if (this.markers[properties.id]) {\n      throw new PSVError(`marker \"${properties.id}\" already exists`);\n    }\n\n    const marker = new Marker(properties, this.psv);\n\n    if (marker.isNormal()) {\n      this.container.appendChild(marker.$el);\n    }\n    else if (marker.isPoly() || marker.isSvg()) {\n      this.svgContainer.appendChild(marker.$el);\n    }\n    else if (marker.is3d()) {\n      this.psv.renderer.scene.add(marker.$el);\n    }\n\n    this.markers[marker.id] = marker;\n\n    if (render) {\n      this.renderMarkers();\n      this.__refreshUi();\n      this.__checkObjectsObserver();\n\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\n    }\n\n    return marker;\n  }\n\n  /**\n   * @summary Returns the internal marker object for a marker id\n   * @param {string} markerId\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\n   * @throws {PSV.PSVError} when the marker cannot be found\n   */\n  getMarker(markerId) {\n    const id = typeof markerId === 'object' ? markerId.id : markerId;\n\n    if (!this.markers[id]) {\n      throw new PSVError(`cannot find marker \"${id}\"`);\n    }\n\n    return this.markers[id];\n  }\n\n  /**\n   * @summary Returns the last marker selected by the user\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\n   */\n  getCurrentMarker() {\n    return this.prop.currentMarker;\n  }\n\n  /**\n   * @summary Updates the existing marker with the same id\n   * @description Every property can be changed but you can't change its type (Eg: `image` to `html`).\n   * @param {PSV.plugins.MarkersPlugin.Properties} properties\n   * @param {boolean} [render=true] - renders the marker immediately\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\n   */\n  updateMarker(properties, render = true) {\n    const marker = this.getMarker(properties.id);\n\n    marker.update(properties);\n\n    if (render) {\n      this.renderMarkers();\n      this.__refreshUi();\n\n      if (marker.is3d()) {\n        this.psv.needsUpdate();\n      }\n\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\n    }\n\n    return marker;\n  }\n\n  /**\n   * @summary Removes a marker from the viewer\n   * @param {string} markerId\n   * @param {boolean} [render=true] - renders the marker immediately\n   */\n  removeMarker(markerId, render = true) {\n    const marker = this.getMarker(markerId);\n\n    if (marker.isNormal()) {\n      this.container.removeChild(marker.$el);\n    }\n    else if (marker.isPoly() || marker.isSvg()) {\n      this.svgContainer.removeChild(marker.$el);\n    }\n    else if (marker.is3d()) {\n      this.psv.renderer.scene.remove(marker.$el);\n      this.psv.needsUpdate();\n    }\n\n    if (this.prop.hoveringMarker === marker) {\n      this.prop.hoveringMarker = null;\n    }\n\n    if (this.prop.currentMarker === marker) {\n      this.prop.currentMarker = null;\n    }\n\n    marker.hideTooltip();\n\n    marker.destroy();\n    delete this.markers[marker.id];\n\n    if (render) {\n      this.__refreshUi();\n      this.__checkObjectsObserver();\n\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\n    }\n  }\n\n  /**\n   * @summary Removes multiple markers\n   * @param {string[]} markerIds\n   * @param {boolean} [render=true] - renders the markers immediately\n   */\n  removeMarkers(markerIds, render = true) {\n    markerIds.forEach(markerId => this.removeMarker(markerId, false));\n\n    if (render) {\n      this.__refreshUi();\n      this.__checkObjectsObserver();\n\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\n    }\n  }\n\n  /**\n   * @summary Replaces all markers\n   * @param {PSV.plugins.MarkersPlugin.Properties[]} markers\n   * @param {boolean} [render=true] - renders the marker immediately\n   */\n  setMarkers(markers, render = true) {\n    this.clearMarkers(false);\n\n    utils.each(markers, marker => this.addMarker(marker, false));\n\n    if (render) {\n      this.renderMarkers();\n      this.__refreshUi();\n      this.__checkObjectsObserver();\n\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\n    }\n  }\n\n  /**\n   * @summary Removes all markers\n   * @param {boolean} [render=true] - renders the markers immediately\n   */\n  clearMarkers(render = true) {\n    utils.each(this.markers, marker => this.removeMarker(marker, false));\n\n    if (render) {\n      this.renderMarkers();\n      this.__refreshUi();\n      this.__checkObjectsObserver();\n\n      this.trigger(EVENTS.SET_MARKERS, this.getMarkers());\n    }\n  }\n\n  /**\n   * @summary Rotate the view to face the marker\n   * @param {string} markerId\n   * @param {string|number} [speed] - rotates smoothy, see {@link PSV.Viewer#animate}\n   * @fires PSV.plugins.MarkersPlugin.goto-marker-done\n   * @return {PSV.Animation}  A promise that will be resolved when the animation finishes\n   */\n  gotoMarker(markerId, speed) {\n    const marker = this.getMarker(markerId);\n\n    return this.psv.animate({\n      ...marker.props.position,\n      speed,\n    })\n      .then(() => {\n        this.trigger(EVENTS.GOTO_MARKER_DONE, marker);\n      });\n  }\n\n  /**\n   * @summary Hides a marker\n   * @param {string} markerId\n   */\n  hideMarker(markerId) {\n    this.toggleMarker(markerId, false);\n  }\n\n  /**\n   * @summary Shows a marker\n   * @param {string} markerId\n   */\n  showMarker(markerId) {\n    this.toggleMarker(markerId, true);\n  }\n\n  /**\n   * @summary Toggles a marker\n   * @param {string} markerId\n   * @param {boolean} [visible]\n   */\n  toggleMarker(markerId, visible = null) {\n    const marker = this.getMarker(markerId);\n    marker.visible = visible === null ? !marker.visible : visible;\n    if (marker.is3d()) {\n      this.psv.needsUpdate();\n    }\n    else {\n      this.renderMarkers();\n    }\n  }\n\n  /**\n   * @summary Opens the panel with the content of the marker\n   * @param {string} markerId\n   */\n  showMarkerPanel(markerId) {\n    const marker = this.getMarker(markerId);\n\n    if (marker?.config?.content) {\n      this.psv.panel.show({\n        id     : ID_PANEL_MARKER,\n        content: marker.config.content,\n      });\n    }\n    else {\n      this.psv.panel.hide(ID_PANEL_MARKER);\n    }\n  }\n\n  /**\n   * @summary Toggles the visibility of the list of markers\n   */\n  toggleMarkersList() {\n    if (this.psv.panel.prop.contentId === ID_PANEL_MARKERS_LIST) {\n      this.hideMarkersList();\n    }\n    else {\n      this.showMarkersList();\n    }\n  }\n\n  /**\n   * @summary Opens side panel with the list of markers\n   * @fires PSV.plugins.MarkersPlugin.filter:render-markers-list\n   */\n  showMarkersList() {\n    let markers = [];\n    utils.each(this.markers, (marker) => {\n      if (marker.visible && !marker.config.hideList) {\n        markers.push(marker);\n      }\n    });\n\n    markers = this.change(EVENTS.RENDER_MARKERS_LIST, markers);\n\n    this.psv.panel.show({\n      id          : ID_PANEL_MARKERS_LIST,\n      content     : MARKERS_LIST_TEMPLATE(\n        markers,\n        this.psv.config.lang[MarkersButton.id],\n        utils.dasherize(MARKER_DATA)\n      ),\n      noMargin    : true,\n      clickHandler: (e) => {\n        const li = e.target ? utils.getClosest(e.target, 'li') : undefined;\n        const markerId = li ? li.dataset[MARKER_DATA] : undefined;\n\n        if (markerId) {\n          const marker = this.getMarker(markerId);\n\n          this.trigger(EVENTS.SELECT_MARKER_LIST, marker);\n\n          this.gotoMarker(marker, 1000);\n          this.hideMarkersList();\n        }\n      },\n    });\n  }\n\n  /**\n   * @summary Closes side panel if it contains the list of markers\n   */\n  hideMarkersList() {\n    this.psv.panel.hide(ID_PANEL_MARKERS_LIST);\n  }\n\n  /**\n   * @summary Updates the visibility and the position of all markers\n   */\n  renderMarkers() {\n    const zoomLevel = this.psv.getZoomLevel();\n    const viewerPosition = this.psv.getPosition();\n\n    utils.each(this.markers, (marker) => {\n      let isVisible = this.prop.visible && marker.visible;\n      let position = null;\n\n      if (isVisible && marker.is3d()) {\n        position = this.__getMarkerPosition(marker);\n        isVisible = this.__isMarkerVisible(marker, position);\n      }\n      else if (isVisible && marker.isPoly()) {\n        const positions = this.__getPolyPositions(marker);\n        isVisible = positions.length > (marker.isPolygon() ? 2 : 1);\n\n        if (isVisible) {\n          position = this.__getMarkerPosition(marker);\n\n          const points = positions.map(pos => (pos.x - position.x) + ',' + (pos.y - position.y)).join(' ');\n\n          marker.$el.setAttributeNS(null, 'points', points);\n          marker.$el.setAttributeNS(null, 'transform', `translate(${position.x} ${position.y})`);\n        }\n      }\n      else if (isVisible) {\n        if (marker.props.dynamicSize) {\n          this.__updateMarkerSize(marker);\n        }\n\n        position = this.__getMarkerPosition(marker);\n        isVisible = this.__isMarkerVisible(marker, position);\n\n        if (isVisible) {\n          const scale = marker.getScale(zoomLevel, viewerPosition);\n\n          if (marker.isSvg()) {\n            // simulate transform-origin relative to SVG element\n            const x = position.x + marker.props.width * marker.props.anchor.x * (1 - scale);\n            const y = position.y + marker.props.width * marker.props.anchor.y * (1 - scale);\n            marker.$el.setAttributeNS(null, 'transform', `translate(${x}, ${y}) scale(${scale}, ${scale})`);\n          }\n          else {\n            marker.$el.style.transform = `translate3D(${position.x}px, ${position.y}px, 0px) scale(${scale}, ${scale})`;\n          }\n        }\n      }\n\n      marker.props.position2D = isVisible ? position : null;\n\n      if (!marker.is3d()) {\n        utils.toggleClass(marker.$el, 'psv-marker--visible', isVisible);\n      }\n\n      if (isVisible && (this.prop.showAllTooltips || (marker === this.prop.hoveringMarker && !marker.isPoly()))) {\n        marker.showTooltip();\n      }\n      else if (!isVisible || marker !== this.prop.hoveringMarker) {\n        marker.hideTooltip();\n      }\n    });\n  }\n\n  /**\n   * @summary Determines if a point marker is visible<br>\n   * It tests if the point is in the general direction of the camera, then check if it's in the viewport\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   * @param {PSV.Point} position\n   * @returns {boolean}\n   * @private\n   */\n  __isMarkerVisible(marker, position) {\n    return marker.props.positions3D[0].dot(this.psv.prop.direction) > 0\n      && position.x + marker.props.width >= 0\n      && position.x - marker.props.width <= this.psv.prop.size.width\n      && position.y + marker.props.height >= 0\n      && position.y - marker.props.height <= this.psv.prop.size.height;\n  }\n\n  /**\n   * @summary Computes the real size of a marker\n   * @description This is done by removing all it's transformations (if any) and making it visible\n   * before querying its bounding rect\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   * @private\n   */\n  __updateMarkerSize(marker) {\n    utils.addClasses(marker.$el, 'psv-marker--transparent');\n\n    let transform;\n    if (marker.isSvg()) {\n      transform = marker.$el.getAttributeNS(null, 'transform');\n      marker.$el.removeAttributeNS(null, 'transform');\n    }\n    else {\n      transform = marker.$el.style.transform;\n      marker.$el.style.transform = '';\n    }\n\n    const rect = marker.$el.getBoundingClientRect();\n    marker.props.width = rect.width;\n    marker.props.height = rect.height;\n\n    utils.removeClasses(marker.$el, 'psv-marker--transparent');\n\n    if (transform) {\n      if (marker.isSvg()) {\n        marker.$el.setAttributeNS(null, 'transform', transform);\n      }\n      else {\n        marker.$el.style.transform = transform;\n      }\n    }\n\n    // the size is no longer dynamic once known\n    marker.props.dynamicSize = false;\n  }\n\n  /**\n   * @summary Computes viewer coordinates of a marker\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   * @returns {PSV.Point}\n   * @private\n   */\n  __getMarkerPosition(marker) {\n    if (marker.isPoly()) {\n      return this.psv.dataHelper.sphericalCoordsToViewerCoords(marker.props.position);\n    }\n    else {\n      const position = this.psv.dataHelper.vector3ToViewerCoords(marker.props.positions3D[0]);\n\n      position.x -= marker.props.width * marker.props.anchor.x;\n      position.y -= marker.props.height * marker.props.anchor.y;\n\n      return position;\n    }\n  }\n\n  /**\n   * @summary Computes viewer coordinates of each point of a polygon/polyline<br>\n   * It handles points behind the camera by creating intermediary points suitable for the projector\n   * @param {PSV.plugins.MarkersPlugin.Marker} marker\n   * @returns {PSV.Point[]}\n   * @private\n   */\n  __getPolyPositions(marker) {\n    const nbVectors = marker.props.positions3D.length;\n\n    // compute if each vector is visible\n    const positions3D = marker.props.positions3D.map((vector) => {\n      return {\n        vector : vector,\n        visible: vector.dot(this.psv.prop.direction) > 0,\n      };\n    });\n\n    // get pairs of visible/invisible vectors for each invisible vector connected to a visible vector\n    const toBeComputed = [];\n    positions3D.forEach((pos, i) => {\n      if (!pos.visible) {\n        const neighbours = [\n          i === 0 ? positions3D[nbVectors - 1] : positions3D[i - 1],\n          i === nbVectors - 1 ? positions3D[0] : positions3D[i + 1],\n        ];\n\n        neighbours.forEach((neighbour) => {\n          if (neighbour.visible) {\n            toBeComputed.push({\n              visible  : neighbour,\n              invisible: pos,\n              index    : i,\n            });\n          }\n        });\n      }\n    });\n\n    // compute intermediary vector for each pair (the loop is reversed for splice to insert at the right place)\n    toBeComputed.reverse().forEach((pair) => {\n      positions3D.splice(pair.index, 0, {\n        vector : this.__getPolyIntermediaryPoint(pair.visible.vector, pair.invisible.vector),\n        visible: true,\n      });\n    });\n\n    // translate vectors to screen pos\n    return positions3D\n      .filter(pos => pos.visible)\n      .map(pos => this.psv.dataHelper.vector3ToViewerCoords(pos.vector));\n  }\n\n  /**\n   * Given one point in the same direction of the camera and one point behind the camera,\n   * computes an intermediary point on the great circle delimiting the half sphere visible by the camera.\n   * The point is shifted by .01 rad because the projector cannot handle points exactly on this circle.\n   * TODO : does not work with fisheye view (must not use the great circle)\n   * {@link http://math.stackexchange.com/a/1730410/327208}\n   * @param P1 {external:THREE.Vector3}\n   * @param P2 {external:THREE.Vector3}\n   * @returns {external:THREE.Vector3}\n   * @private\n   */\n  __getPolyIntermediaryPoint(P1, P2) {\n    const C = this.psv.prop.direction.clone().normalize();\n    const N = new THREE.Vector3().crossVectors(P1, P2).normalize();\n    const V = new THREE.Vector3().crossVectors(N, P1).normalize();\n    const X = P1.clone().multiplyScalar(-C.dot(V));\n    const Y = V.clone().multiplyScalar(C.dot(P1));\n    const H = new THREE.Vector3().addVectors(X, Y).normalize();\n    const a = new THREE.Vector3().crossVectors(H, C);\n    return H.applyAxisAngle(a, 0.01).multiplyScalar(CONSTANTS.SPHERE_RADIUS);\n  }\n\n  /**\n   * @summary Returns the marker associated to an event target\n   * @param {EventTarget} target\n   * @param {boolean} [closest=false]\n   * @returns {PSV.plugins.MarkersPlugin.Marker}\n   * @private\n   */\n  __getTargetMarker(target, closest = false) {\n    const target2 = closest ? utils.getClosest(target, '.psv-marker') : target;\n    return target2 ? target2[MARKER_DATA] : undefined;\n  }\n\n  /**\n   * @summary Checks if an event target is in the tooltip\n   * @param {EventTarget} target\n   * @param {PSV.components.Tooltip} tooltip\n   * @returns {boolean}\n   * @private\n   */\n  __targetOnTooltip(target, tooltip) {\n    return target && tooltip ? utils.hasParent(target, tooltip.container) : false;\n  }\n\n  /**\n   * @summary Handles mouse enter events, show the tooltip for non polygon markers\n   * @param {MouseEvent} e\n   * @param {PSV.plugins.MarkersPlugin.Marker} [marker]\n   * @fires PSV.plugins.MarkersPlugin.over-marker\n   * @private\n   */\n  __onMouseEnter(e, marker) {\n    if (marker && !marker.isPoly()) {\n      this.prop.hoveringMarker = marker;\n\n      this.trigger(EVENTS.OVER_MARKER, marker);\n\n      if (!this.prop.showAllTooltips) {\n        marker.showTooltip(e);\n      }\n    }\n  }\n\n  /**\n   * @summary Handles mouse leave events, hide the tooltip\n   * @param {MouseEvent} e\n   * @param {PSV.plugins.MarkersPlugin.Marker} [marker]\n   * @fires PSV.plugins.MarkersPlugin.leave-marker\n   * @private\n   */\n  __onMouseLeave(e, marker) {\n    // do not hide if we enter the tooltip itself while hovering a polygon\n    if (marker && !(marker.isPoly() && this.__targetOnTooltip(e.relatedTarget, marker.tooltip))) {\n      this.trigger(EVENTS.LEAVE_MARKER, marker);\n\n      this.prop.hoveringMarker = null;\n\n      if (!this.prop.showAllTooltips) {\n        marker.hideTooltip();\n      }\n    }\n  }\n\n  /**\n   * @summary Handles mouse move events, refreshUi the tooltip for polygon markers\n   * @param {MouseEvent} e\n   * @param {PSV.plugins.MarkersPlugin.Marker} [targetMarker]\n   * @fires PSV.plugins.MarkersPlugin.leave-marker\n   * @fires PSV.plugins.MarkersPlugin.over-marker\n   * @private\n   */\n  __onMouseMove(e, targetMarker) {\n    let marker;\n\n    if (targetMarker?.isPoly()) {\n      marker = targetMarker;\n    }\n    // do not hide if we enter the tooltip itself while hovering a polygon\n    else if (this.prop.hoveringMarker && this.__targetOnTooltip(e.target, this.prop.hoveringMarker.tooltip)) {\n      marker = this.prop.hoveringMarker;\n    }\n\n    if (marker) {\n      if (!this.prop.hoveringMarker) {\n        this.trigger(EVENTS.OVER_MARKER, marker);\n\n        this.prop.hoveringMarker = marker;\n      }\n\n      if (!this.prop.showAllTooltips) {\n        marker.showTooltip(e);\n      }\n    }\n    else if (this.prop.hoveringMarker?.isPoly()) {\n      this.trigger(EVENTS.LEAVE_MARKER, this.prop.hoveringMarker);\n\n      if (!this.prop.showAllTooltips) {\n        this.prop.hoveringMarker.hideTooltip();\n      }\n\n      this.prop.hoveringMarker = null;\n    }\n  }\n\n  /**\n   * @summary Handles mouse click events, select the marker and open the panel if necessary\n   * @param {Event} e\n   * @param {Object} data\n   * @param {boolean} dblclick\n   * @fires PSV.plugins.MarkersPlugin.select-marker\n   * @fires PSV.plugins.MarkersPlugin.unselect-marker\n   * @private\n   */\n  __onClick(e, data, dblclick) {\n    let marker = data.objects.find(o => o.userData[MARKER_DATA])?.userData[MARKER_DATA];\n\n    if (!marker) {\n      marker = this.__getTargetMarker(data.target, true);\n    }\n\n    if (marker) {\n      this.prop.currentMarker = marker;\n\n      this.trigger(EVENTS.SELECT_MARKER, marker, {\n        dblclick  : dblclick,\n        rightclick: data.rightclick,\n      });\n\n      if (this.config.clickEventOnMarker) {\n        // add the marker to event data\n        data.marker = marker;\n      }\n      else {\n        e.stopPropagation();\n      }\n\n      // the marker could have been deleted in an event handler\n      if (this.markers[marker.id]) {\n        this.showMarkerPanel(marker.id);\n      }\n    }\n    else if (this.prop.currentMarker) {\n      this.trigger(EVENTS.UNSELECT_MARKER, this.prop.currentMarker);\n\n      this.psv.panel.hide(ID_PANEL_MARKER);\n\n      this.prop.currentMarker = null;\n    }\n  }\n\n  /**\n   * @summary Updates the visiblity of the panel and the buttons\n   * @private\n   */\n  __refreshUi() {\n    const nbMarkers = Object.values(this.markers).filter(m => !m.config.hideList).length;\n    const markersButton = this.psv.navbar.getButton(MarkersButton.id, false);\n    const markersListButton = this.psv.navbar.getButton(MarkersListButton.id, false);\n\n    if (nbMarkers === 0) {\n      markersButton?.hide();\n      markersListButton?.hide();\n\n      if (this.psv.panel.isVisible(ID_PANEL_MARKERS_LIST)) {\n        this.psv.panel.hide();\n      }\n      else if (this.psv.panel.isVisible(ID_PANEL_MARKER)) {\n        this.psv.panel.hide();\n      }\n    }\n    else {\n      markersButton?.show();\n      markersListButton?.show();\n\n      if (this.psv.panel.isVisible(ID_PANEL_MARKERS_LIST)) {\n        this.showMarkersList();\n      }\n      else if (this.psv.panel.isVisible(ID_PANEL_MARKER)) {\n        this.prop.currentMarker ? this.showMarkerPanel(this.prop.currentMarker) : this.psv.panel.hide();\n      }\n    }\n  }\n\n  /**\n   * @summary Adds or remove the objects observer if there are 3D markers\n   * @private\n   */\n  __checkObjectsObserver() {\n    const has3d = Object.values(this.markers).some(marker => marker.is3d());\n\n    if (!has3d && this.prop.stopObserver) {\n      this.prop.stopObserver();\n      this.prop.stopObserver = null;\n    }\n    else if (has3d && !this.prop.stopObserver) {\n      this.prop.stopObserver = this.psv.observeObjects(MARKER_DATA, this);\n    }\n  }\n\n}\n"],"names":["EVENTS","GOTO_MARKER_DONE","LEAVE_MARKER","OVER_MARKER","RENDER_MARKERS_LIST","SELECT_MARKER","SELECT_MARKER_LIST","UNSELECT_MARKER","HIDE_MARKERS","SET_MARKERS","SHOW_MARKERS","SVG_NS","MARKER_DATA","ID_PANEL_MARKER","ID_PANEL_MARKERS_LIST","MARKERS_LIST_TEMPLATE","markers","title","dataKey","icon","map","marker","config","id","type","image","getListContent","join","getShortestArc","from","to","tCandidates","Math","PI","reduce","value","candidate","newCandidate","abs","Infinity","PSVError","message","Error","captureStackTrace","stack","prototype","Object","create","name","constructor","logWarn","console","warn","THREE","Quaternion","greatArcIntermediaryPoint","p1","p2","f","λ1","φ1","λ2","φ2","r","utils","greatArcDistance","a","sin","b","x","cos","y","z","atan2","sqrt","getPolygonCenter","polygon","workPoints","k","i","length","d","push","sum","intermediary","point","parseAngle","getPolylineCenter","polyline","lengths","l","CONSTANTS","SPHERE_RADIUS","consumed","j","round","MARKER_TYPES","imageLayer","html","polygonPx","polygonRad","polylinePx","polylineRad","square","rect","circle","ellipse","path","Marker","properties","psv","getType","visible","$el","data","undefined","tooltip","props","dynamicSize","anchor","position","position2D","positions3D","width","height","def","loader","is3d","TextureLoader","withCredentials","setWithCredentials","requestHeaders","setRequestHeader","isNormal","document","createElement","isPolygon","createElementNS","isPolyline","isSvg","update","destroy","isPoly","isPolyPx","isPolyRad","getScale","zoomLevel","scale","Array","isArray","zoom","bounds","EASINGS","inQuad","longitude","halfFov","MathUtils","degToRad","prop","hFov","arc","outQuad","max","listContent","content","showTooltip","mousePosition","viewerPos","getPosition","container","box","size","arrow","top","clientY","left","clientX","move","hideTooltip","hide","newType","deepmerge","setAttribute","className","addClasses","style","opacity","parsePosition","__updateNormal","__updatePoly","__updateSvg","__update3d","isExtendedPosition","backgroundImage","innerHTML","transformOrigin","dataHelper","cleanPosition","sphericalCoordsToVector3","cx","cy","rx","ry","each","setAttributeNS","svgStyle","dasherize","fill","actualPoly","splice","coord","sphericalCoords","textureCoordsToSphericalCoords","latitude","centroid","material","MeshBasicMaterial","transparent","depthTest","geometry","PlaneGeometry","mesh","Mesh","userData","Group","add","defineProperty","enumerable","get","children","set","load","texture","anisotropy","needsUpdate","copy","orientation","lookAt","rotateX","rotateY","allowNone","found","keys","MarkersButton","navbar","plugin","getPlugin","on","toggleActive","off","isSupported","handleEvent","e","onClick","show","AbstractButton","pin","MarkersListButton","OPEN_PANEL","CLOSE_PANEL","args","toggleMarkersList","pinList","DEFAULTS","lang","registerButton","MarkersPlugin","options","currentMarker","hoveringMarker","stopObserver","clickEventOnMarker","listButton","hideButton","cursor","mousemove","svgContainer","appendChild","addEventListener","init","CLICK","DOUBLE_CLICK","RENDER","CONFIG_CHANGED","once","READY","setMarkers","clearMarkers","removeChild","__onMouseEnter","__getTargetMarker","target","__onMouseLeave","__onMouseMove","preventDefault","__onClick","renderMarkers","OBJECT_EVENTS","ENTER_OBJECT","detail","originalEvent","LEAVE_OBJECT","HOVER_OBJECT","trigger","toggleAllTooltips","showAllTooltips","hideAllTooltips","getNbMarkers","getMarkers","values","addMarker","render","renderer","scene","__refreshUi","__checkObjectsObserver","getMarker","markerId","getCurrentMarker","updateMarker","removeMarker","remove","removeMarkers","markerIds","forEach","gotoMarker","speed","animate","then","hideMarker","toggleMarker","showMarker","showMarkerPanel","panel","contentId","hideMarkersList","showMarkersList","hideList","change","noMargin","clickHandler","li","getClosest","dataset","getZoomLevel","viewerPosition","isVisible","__getMarkerPosition","__isMarkerVisible","positions","__getPolyPositions","points","pos","__updateMarkerSize","transform","toggleClass","dot","direction","getAttributeNS","removeAttributeNS","getBoundingClientRect","removeClasses","sphericalCoordsToViewerCoords","vector3ToViewerCoords","nbVectors","vector","toBeComputed","neighbours","neighbour","invisible","index","reverse","pair","__getPolyIntermediaryPoint","filter","P1","P2","C","clone","normalize","N","Vector3","crossVectors","V","X","multiplyScalar","Y","H","addVectors","applyAxisAngle","closest","target2","__targetOnTooltip","hasParent","relatedTarget","targetMarker","dblclick","objects","find","o","rightclick","stopPropagation","nbMarkers","m","markersButton","getButton","markersListButton","has3d","some","observeObjects","AbstractPlugin"],"mappings":"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"}